--- a/portscanner-mrib.py
+++ b/portscanner-mrib.py
@@ -22,7 +22,7 @@
 import sys
 import time
 from datetime import datetime, timezone
-from typing import Dict, List, Optional, Tuple
+from typing import Dict, List, Optional, Tuple, Any

@@ -408,6 +408,45 @@
         print("Root privileges required for --syn or --udp. Rerun with sudo.")
         sys.exit(2)
+
+# -----------------------------------------------------------------------------
+# PCAP sniffer helpers (Scapy AsyncSniffer)
+# -----------------------------------------------------------------------------
+
+def start_pcap_sniffer(filter_expr: Optional[str] = None) -> Any:
+    # Starts a Scapy AsyncSniffer and returns it. Returns None on failure.
+    if not SCAPY_AVAILABLE:
+        return None
+    try:
+        sniffer = scapy.AsyncSniffer(filter=filter_expr)
+        sniffer.start()
+        return sniffer
+    except Exception:
+        return None
+
+
+def stop_and_write_sniffer(sniffer: Any, filename: str) -> None:
+    # Stops sniffer and writes captured packets to filename using wrpcap.
+    if sniffer is None:
+        return
+    try:
+        packets = sniffer.stop()
+        scapy.wrpcap(filename, packets if packets else [])
+    except Exception as exc:
+        print(f"Failed to write pcap {filename}: {type(exc).__name__}")
+
@@ -479,6 +518,11 @@
         help="UDP payload strategy",
     )
+
+    parser.add_argument(
+        "--pcap",
+        help="Write packet capture(s) to pcap file. Single target uses exact filename; multiple targets write <base>.<ip>.pcap",
+    )
@@ -520,6 +564,13 @@

 
